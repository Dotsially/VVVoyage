<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="App_Instructions" xml:space="preserve">
    <value>To start a route, simply click the route button on the main menu screen. You are then able to choose any route you'd like. The route will start right away! Follow the line on the screen to arrive at the next landmark. You will get a notification once you're close. The app will give a useful name and description for the landmark as well. Admire its beauty, and then visit the next landmark. The tour will automatically end once you've visited all landmarks of the route.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Ensure_Gps" xml:space="preserve">
    <value>• Ensure that the GPS functionality on your phone is working and that this app has access to it;</value>
  </data>
  <data name="Ensure_Permissions" xml:space="preserve">
    <value>• Make sure the app has access to location, even when the app is inactive. So not only while using the app, but also in the background.</value>
  </data>
  <data name="Ensure_Wifi" xml:space="preserve">
    <value>• Ensure that you are using Wi-Fi or cellular data throughout the tour;</value>
  </data>
  <data name="General_Outline" xml:space="preserve">
    <value>General outline</value>
  </data>
  <data name="Important" xml:space="preserve">
    <value>Important</value>
  </data>
  <data name="Landmark_Default_Label" xml:space="preserve">
    <value>Landmark</value>
  </data>
  <data name="Landmark_Progress_Message" xml:space="preserve">
    <value>You visited the last landmark on {0} with id {1}. Note that this progress will not be updated on the map!</value>
  </data>
  <data name="Landmark_Progress_Title" xml:space="preserve">
    <value>Landmark progress</value>
  </data>
  <data name="Location_Disabled_Message" xml:space="preserve">
    <value>The tour cannot be started, because the phone's location services (including GPS services) have been disabled. Hint: re-enable location services by going to the Quick Settings menu (swipe down from the top) and activate the tile named 'Location'.</value>
  </data>
  <data name="Location_Disabled_Title" xml:space="preserve">
    <value>Error: location disabled</value>
  </data>
  <data name="Location_Permission_Message" xml:space="preserve">
    <value>GPS location permission is required to use this app.</value>
  </data>
  <data name="Location_Permission_Title" xml:space="preserve">
    <value>Permission required</value>
  </data>
  <data name="Navigation_Instruction" xml:space="preserve">
    <value>Head to:</value>
  </data>
  <data name="Next_Landmark" xml:space="preserve">
    <value>Next landmark</value>
  </data>
  <data name="Next_Sight" xml:space="preserve">
    <value>Next sight:</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="No_Internet_Continue" xml:space="preserve">
    <value>Continue tour</value>
  </data>
  <data name="No_Internet_Message" xml:space="preserve">
    <value>Currently, it looks like you don't have internet access! This may happen when you're switching Wi-Fi networks, or when switching from Wi-Fi to cellular data. Continuing the tour might help.</value>
  </data>
  <data name="No_Internet_Stop" xml:space="preserve">
    <value>Stop tour</value>
  </data>
  <data name="No_Internet_Title" xml:space="preserve">
    <value>No internet</value>
  </data>
  <data name="No_Location_Support_Message" xml:space="preserve">
    <value>The app cannot work on this phone, since it does not have a GPS.</value>
  </data>
  <data name="No_Location_Support_Title" xml:space="preserve">
    <value>GPS not supported</value>
  </data>
  <data name="Phone_Too_Far_Away_Message" xml:space="preserve">
    <value>The tour cannot be started, because the phone is too far away from Breda! Hint: if you're running an emulator, set the emulator location to somewhere in Breda in the emulator settings.</value>
  </data>
  <data name="Phone_Too_Far_Away_Title" xml:space="preserve">
    <value>Error: too far away</value>
  </data>
  <data name="Random_Tour_Description" xml:space="preserve">
    <value>Can't decide which tour to take? Let the app decide a tour for you.</value>
  </data>
  <data name="Random_Tour_Name" xml:space="preserve">
    <value>Random tour</value>
  </data>
  <data name="Scroll_Page_Instruction" xml:space="preserve">
    <value>▼ Scroll this page to see more ▼</value>
  </data>
  <data name="Select_Instruction" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Select_Tour" xml:space="preserve">
    <value>Select a tour</value>
  </data>
  <data name="Stop_Route_Confirmation" xml:space="preserve">
    <value>Are you sure you want to stop the tour? Your progress will be lost!</value>
  </data>
  <data name="Tour_End_Message" xml:space="preserve">
    <value>You have finished the tour! We hope you had a wonderful experience!</value>
  </data>
  <data name="Tour_End_Title" xml:space="preserve">
    <value>Tour finished!</value>
  </data>
  <data name="Warning_Close" xml:space="preserve">
    <value>• Closing the app while doing the tour, stops the tour.</value>
  </data>
  <data name="Welcome_Message" xml:space="preserve">
    <value>Welcome to VVVoyage, your tour guide through Breda!</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>